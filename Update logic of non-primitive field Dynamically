// Update logic of non primitive field Dynamically in MongoDB without muted other field
const updateStudentIntoDB = async (id: string, payload: Partial<TStudent>) => {
  const { name, guardian, localGuardian, ...primitiveFields } = payload; //seperate primitive fields first
  const modifiedUpdatedData: Record<string, unknown> = { ...primitiveFields };
 /* Now Make the shape following
  {
    "name": {"lastName": "Boss"}
  } like
  {"name.lastName": "Boss"}
*/
  if (name && Object.keys(name).length) {
    for (const [key, value] of Object.entries(name)) {
      modifiedUpdatedData[`name.${key}`] = value;
    }
  }
  if (guardian && Object.keys(guardian).length) {
    for (const [key, value] of Object.entries(guardian)) {
      modifiedUpdatedData[`guardian.${key}`] = value;
    }
  }
  if (localGuardian && Object.keys(localGuardian).length) {
    for (const [key, value] of Object.entries(localGuardian)) {
      modifiedUpdatedData[`localGuardian.${key}`] = value;
    }
  }
  console.log(modifiedUpdatedData);
  const result = await Student.findOneAndUpdate(
    { id: id },
    modifiedUpdatedData,
    {
      new: true,
    },
  );
  return result;
};
