// Frontend part

import { useState } from 'react';
import { useLoaderData } from 'react-router-dom';
const Check = () => {
    const users = useLoaderData();
    console.log(users);
    const [currentUsers, setCurrentUsers] = useState(users);
    const deleteUser=(uid, _id) =>{
        // Delete user from Firebase
        fetch(`http://localhost:5000/deleteUser/${uid}`,{
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        // Delete user from Database
        fetch(`http://localhost:5000/deleteUserFromDB/${_id}`,{
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(data => {
            const remaining = users.filter(user =>user._id!=_id);
            setCurrentUsers(remaining);
        })   
    }
    return (
        <div>
            {
                currentUsers.map(user => (
                    <div key={user._id} className='border-4 border-indigo-500/50 m-4 p-4 w-1/3 flex justify-between rounded-lg'>
                        <div>
                            <p>{user.email}</p>
                            <h1 className='text-3xl'>{user.name}</h1>
                        </div>
                        <button  onClick={()=>deleteUser(user.uid, user._id)}  className='btn btn-error'>Delete</button>
                    </div>
                ))
            }
        </div>
    );
};
export default Check;

//Backend Part
// Deleter user from firebase
const bodyParser = require('body-parser'); //install react body-parser
const admin = require('firebase-admin'); // install react firebase-admin
const serviceAccount = require('./serviceAccountKey.json'); // Path to your service account key file
// to download serviceAccountKey.json file goto firebase->project setting->service accounts->generate new private key
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});
app.use(bodyParser.json());


    // Delete User from firebase
    app.delete('/deleteUser/:uid', (req, res) => {
      const uid = req.params.uid;
      admin.auth().deleteUser(uid)
        .then(() => {
          console.log('User deleted successfully');
          res.status(200).send('User deleted successfully');
        })
        .catch(error => {
          console.error('Error deleting user:', error);
          res.status(500).send('Error deleting user');
        });
    });
    // Delete User from MongoDB
    app.delete('/deleteUserFromDB/:id', async (req, res) => {
      const id = req.params.id;
      const query = { _id: new ObjectId(id) };
      const result = await users.deleteOne(query);
      res.send(result);
    });
